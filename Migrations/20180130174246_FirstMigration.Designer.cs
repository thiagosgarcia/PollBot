// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TollBot.Data;

namespace TollBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180130174246_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("TollBot.Models.Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("MessageId");

                    b.Property<string>("content_id");

                    b.Property<string>("content_type");

                    b.Property<string>("file_name");

                    b.Property<long>("file_so");

                    b.Property<string>("path");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("TollBot.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("App");

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created_at");

                    b.Property<string>("Event");

                    b.Property<long>("Sent");

                    b.Property<int>("To");

                    b.Property<int>("User");

                    b.Property<string>("Uuid");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TollBot.Models.Score", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<long?>("UserId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("TollBot.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("MessageId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("TollBot.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Name");

                    b.Property<string>("Nick");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TollBot.Models.Attachment", b =>
                {
                    b.HasOne("TollBot.Models.Message")
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("TollBot.Models.Score", b =>
                {
                    b.HasOne("TollBot.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TollBot.Models.Tag", b =>
                {
                    b.HasOne("TollBot.Models.Message")
                        .WithMany("Tags")
                        .HasForeignKey("MessageId");
                });
#pragma warning restore 612, 618
        }
    }
}
